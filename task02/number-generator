#! /bin/bash

upper_range_limit=100
guessing_tries=3
user_number=0
random_number=0

get_user_number(){
  local un
  read -rp "Enter your number: " un
  until [[ $upper_range_limit =~ ^[0-9]+$ ]]; do
      read -rp "error: ""$un""cannot be type of int. Try again: " un
  done
  user_number=$un
}

options=$(getopt -l "upper:,retries:" -o "u:r:" -- "$@")
eval set -- "$options"
echo "Options $options"


while true; do
  case $1 in
  -u|--upper) shift; upper_range_limit=$1 ;;
  -r|--retries) shift; guessing_tries=$1 ;;
  --) shift; break ;;
  esac
  shift
done

until [[ $upper_range_limit =~ ^[0-9]+$ ]] && ((upper_range_limit >= 1 && upper_range_limit <= 100)); do
  echo "$upper_range_limit is not in range from 1 to 100"
  read -rp "Enter upper range limit number (1-100): " upper_range_limit
  if [[ $upper_range_limit =~ ^[0-9]+$ ]] && ((upper_range_limit >= 1 && upper_range_limit <= 100)); then
    break
  fi
done

until [[ $guessing_tries =~ ^[0-9]+$ ]] && ((guessing_tries >= 1 && guessing_tries <= 20)); do
  echo "$guessing_tries is not appropriate for the guessing tries. "
  echo "Enter number in range from 1 to 20"
  read -rp "Enter upper range limit number (1-100): " guessing_tries
  if [[ $guessing_tries =~ ^[0-9]+$ ]] && ((guessing_tries >= 1 && guessing_tries <= 20)); then
    break
  fi
done


if [[ $# -ge 1 ]] && [[ $1 =~ ^[0-9]+$ ]]; then
  user_number=$1
  shift
  else get_user_number
fi


get_random_number(){
	random_number=$((RANDOM % upper_range_limit))
	echo "Generated random number in range [0-$upper_range_limit]"
}



is_guessed=0
compare(){
if [ $random_number -gt "$user_number" ]; then
	echo "randomly generated number is greater than $user_number"
elif [ $random_number -lt "$user_number" ]; then
	echo "randomly generated number is less than $user_number"
else
  is_guessed=1
	echo " Bingo !!! Randomly generated number is $user_number"
fi
}

get_random_number
compare

repeat="1"
while [ "$repeat" == "1" ]; do

  counter=1
  while [ $counter -lt "$guessing_tries" ]; do
    if [ $is_guessed = 1 ]; then
      break
    fi
    get_user_number
    compare
    ((counter++))
  done

  if [ "$is_guessed" == "1" ]; then
    read -rp "Play again? - Print \"1\": " repeat
    counter=1
    is_guessed=0
  fi
done