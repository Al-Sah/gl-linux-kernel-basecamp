#! /bin/bash


options=$(getopt -l "upper:,retries:" -o "u:r:" -- "$@")
eval set -- "$options"
echo "Options $options"

upper_range_limit=100
guessing_tries=3

while true; do
  case $1 in
  -u|--upper) shift; upper_range_limit=$1 ;;
  -r|--retries) shift; guessing_tries=$1 ;;
  --) shift; break ;;
  esac
  shift
done

if [ $# -eq 0 ]; then
  read -rp "Your number: " user_number
  else
  user_number=$1
fi



if [ "$upper_range_limit" -lt 1 ] || [ "$upper_range_limit" -gt 100 ]; then
	echo "ERROR"; exit
fi


random_number=""
get_random_number(){
	random_number=$((RANDOM % upper_range_limit))
}



is_guessed=0
compare(){
if [ $random_number -gt "$user_number" ]; then
	echo "randomly generated number is greater than $user_number"
elif [ $random_number -lt "$user_number" ]; then
	echo "randomly generated number is less than $user_number"
else
  is_guessed=1
	echo " Bingo !!! Randomly generated number is $user_number"
fi
}

get_random_number
compare

repeat="1"
while [ $repeat -eq "1" ]; do

  counter=1
  while [ $counter -lt "$guessing_tries" ]; do
    if [ $is_guessed = 1 ]; then
      break
    fi
    read -rp "Enter number to compare: " user_number
    compare
    ((counter++))
  done

  if [ $is_guessed == "1" ]; then
    read -rp "Play again ? ( 1-yes, 0-no ): " repeat
    counter=1
    is_guessed=1
  fi
done